apiVersion: apps/v1
kind: Deployment
metadata:
  name: 5g-anomaly-detector
  labels:
    app: 5g-anomaly-detector
    version: v1.0.0
    component: ml-service
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: 5g-anomaly-detector
  template:
    metadata:
      labels:
        app: 5g-anomaly-detector
        version: v1.0.0
        component: ml-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: anomaly-detector
        image: 5g-anomaly-detector:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: PORT
          value: "8000"
        - name: PYTHONPATH
          value: "/app"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12
        volumeMounts:
        - name: models-volume
          mountPath: /app/models
          readOnly: true
        - name: temp-storage
          mountPath: /app/inference_results
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: models-volume
        configMap:
          name: anomaly-models
          optional: true
      - name: temp-storage
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: 5g-anomaly-detector
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: anomaly-models
  labels:
    app: 5g-anomaly-detector
data:
  # Placeholder for model files - in production, use a proper storage solution
  .gitkeep: ""
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: 5g-anomaly-detector-pdb
  labels:
    app: 5g-anomaly-detector
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: 5g-anomaly-detector